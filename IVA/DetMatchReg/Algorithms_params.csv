AGAST;nonmaxSuppression;boolean;If true, non-maximum suppression is applied to detected corners;true;false;true;true;ADD;;;;;;;;
AGAST;threshold;integer;Threshold on difference between intensity of the central pixel and pixels of a circle around this pixel;10;1;100;1;ADD;;;;;;;;
AGAST;type;integer;One of the four neighborhoods;3;0;3;1;ADD;AGAST_5_8;AGAST_7_12d;AGAST_7_12s;OAST_9_16;;;;
AKAZE;descriptor_channels;integer;Number of channels in the descriptor (1, 2, 3);1;1;3;1;ADD;1;2;3;;;;;
AKAZE;descriptor_size;integer;Size of the descriptor in bits;0;0;486;1;ADD;;;;;;;;
AKAZE;descriptor_type;integer;Type of the extracted descriptor;2;0;3;1;ADD;DESCRIPTOR_KAZE;DESCRIPTOR_KAZE_UPRIGHT;DESCRIPTOR_MLDB;DESCRIPTOR_MLDB_UPRIGHT;;;;
AKAZE;diffusivity;integer;Diffusivity type;1;0;3;1;ADD;DIFF_PM_G1;DIFF_PM_G2;DIFF_WEICKERT;DIFF_CHARBONNIER;;;;
AKAZE;nOctaveLayers;integer;Default number of sublevels per scale level;4;1;4;1;ADD;;;;;;;;
AKAZE;nOctaves;integer;Maximum octave evolution of the image;4;1;4;1;ADD;;;;;;;;
AKAZE;threshold;double; Detector response threshold to accept point;0.001;0.001;1;0.001;ADD;;;;;;;;
BRIEF;bytes;integer;length of descriptor in bytes. It can be equal 16, 32 or 64 bytes;32;16;64;2;MUL;16;32;64;;;;;
BRIEF;use_orientation;boolean;Use Orientation;false;false;true;true;ADD;;;;;;;;
BRISK;octaves;integer;Detection octaves (0 to do single scale);3;0;7;1;ADD;0;1;2;3;4;5;6;7
BRISK;thres;integer;FAST/AGAST detection threshold score;30;1;100;1;ADD;;;;;;;;
FAST;nonmaxSuppression;boolean;If true, non-maximum suppression is applied to detected corners (keypoints);true;false;true;true;ADD;;;;;;;;
FAST;threshold;integer;Threshold on difference between intensity of the central pixel and pixels of a circle around this pixel.;10;1;100;1;ADD;;;;;;;;
FAST;type;integer;Fast feature type;2;0;2;1;ADD;TYPE_5_8;TYPE_7_12;TYPE_9_16;;;;;
FREAK;nbOctave;integer;Number of octaves covered by the detected keypoints;4;1;8;1;ADD;1;2;3;4;5;6;7;8
FREAK;orientationNormalized;boolean;Enable orientation normalization;true;false;true;true;ADD;;;;;;;;
FREAK;patternScale;double;Scaling of the description pattern;22;5;100;1;ADD;;;;;;;;
FREAK;scaleNormalized;boolean;Enable scale normalization;true;false;true;true;ADD;;;;;;;;
GFTT;blockSize;integer;Block size;3;3;9;2;ADD;;;;;;;;
GFTT;k;double;Free parameter of the Harris detector;0.04;0.04;0.15;0.01;ADD;;;;;;;;
GFTT;minDistance;double;Minimum possible Euclidean distance between the returned corners;1;1;5;0.1;ADD;;;;;;;;
GFTT;nfeatures;integer;Maximum number of corners to return;1000;100;2000;100;ADD;;;;;;;;
GFTT;qualityLevel;double;Parameter characterizing the minimal accepted quality of image corners. The parameter value is multiplied by the best corner quality measure.;0.01;0.01;0.1;0.01;ADD;;;;;;;;
GFTT;useHarrisDetector;boolean;Parameter indicating whether to use a Harris detector (see cornerHarris()) or cornerMinEigenVal());false;false;true;true;ADD;;;;;;;;
HARRIS;k;double;Free parameter of the Harris detector;0.04;0.04;0.15;0.01;ADD;;;;;;;;
HARRIS;minDistance;double;Minimum possible Euclidean distance between the returned corners;1;1;5;0.1;ADD;;;;;;;;
HARRIS;nfeatures;integer;Maximum number of corners to return;1000;100;2000;100;ADD;;;;;;;;
HARRIS;qualityLevel;double;Parameter characterizing the minimal accepted quality of image corners. The parameter value is multiplied by the best corner quality measure.;0.01;0.01;0.1;0.01;ADD;;;;;;;;
HARRIS;useHarrisDetector;boolean;Parameter indicating whether to use a Harris detector (see cornerHarris()) or cornerMinEigenVal());true;false;true;true;ADD;;;;;;;;
KAZE;diffusivity;integer;Diffusivity type;1;0;3;1;ADD;DIFF_PM_G1;DIFF_PM_G2;DIFF_WEICKERT;DIFF_CHARBONNIER;;;;
KAZE;extended;boolean;Set to enable extraction of extended (128-byte) descriptor;false;false;true;true;ADD;;;;;;;;
KAZE;nOctaveLayers;integer;Default number of sublevels per scale level;4;1;4;1;ADD;;;;;;;;
KAZE;nOctaves;integer;Maximum octave evolution of the image;4;1;4;1;ADD;;;;;;;;
KAZE;threshold;double;Detector response threshold to accept point;0.001;0.001;1;0.001;ADD;;;;;;;;
KAZE;upright;boolean;Set to enable use of upright descriptors (non rotation-invariant);false;false;true;true;ADD;;;;;;;;
MSER;areaThreshold;double;[Colors Only] The area threshold to cause re-initialize;1.01;1.001;1.5;0.001;ADD;;;;;;;;
MSER;delta;integer;Compares (size_(i)-size_(i-delta))/size_(i-delta);5;1;10;1;ADD;;;;;;;;
MSER;edgeBlurSize;integer;[Colors Only] Aperture size for edge blur;5;3;25;2;ADD;;;;;;;;
MSER;maxArea;integer;Prune the areas bigger than maxArea;14400;2500;40000;100;ADD;;;;;;;;
MSER;maxEvolution;integer;[Colors Only] The the evolution steps;200;10;500;10;ADD;;;;;;;;
MSER;maxVariation;double;Prune the areas that have simliar size to its children;0.25;0.05;0.5;0.01;ADD;;;;;;;;
MSER;minArea;integer;Prune the areas smaller than minArea;60;9;100;1;ADD;;;;;;;;
MSER;minDiversity;double;Trace back to cut off mser with diversity < min_diversity;0.2;0.05;0.5;0.01;ADD;;;;;;;;
MSER;minMargin;double;[Colors Only] Ignore too small margin;0.003;0.001;0.1;0.001;ADD;;;;;;;;
MSER;pass2Only;boolean;Only second pass;false;false;true;true;ADD;;;;;;;;
ORB;edgeThreshold;integer;This is size of the border where the features are not detected (>= patchSize);31;5;99;2;ADD;;;;;;;;
ORB;fastThreshold;integer;Undocumented Fast threshold;20;20;20;0;ADD;;;;;;;;
ORB;firstLevel;integer;should be 0 in the current implementation;0;0;0;0;ADD;;;;;;;;
ORB;nFeatures;integer;Maximum number of features to retain;500;100;2000;100;ADD;;;;;;;;
ORB;nLevels;integer;The number of pyramid levels;8;2;16;2;ADD;;;;;;;;
ORB;patchSize;integer;Size of the patch used by the oriented BRIEF descriptor;31;5;99;2;ADD;;;;;;;;
ORB;scaleFactor;double;Pyramid decimation ratio (>=1), 2 means classical pyramid;1.2;1;2;0.1;ADD;;;;;;;;
ORB;scoreType;integer;The default HARRIS_SCORE means that Harris algorithm is used to rank features, FAST_SCORE is alternative value of the parameter that produces slightly less stable keypoints, but it is a little faster to compute;0;0;1;1;ADD;HARRIS_SCORE;FAST_SCORE;;;;;;
ORB;WTA_K;integer;The number of [random] points that produce each element of the oriented BRIEF descriptor. 2 means BRIEF;2;2;4;1;ADD;2;3;4;;;;;
SIFT;contrastThreshold;double;Contrast Threshold;0.04;0.04;0.15;0.01;ADD;;;;;;;;
SIFT;edgeThreshold;double;Edge Threshold;10;1;100;1;ADD;;;;;;;;
SIFT;nFeatures;integer;Number of features (0 for infinite);0;100;2000;100;ADD;;;;;;;;
SIFT;nOctaveLayers;integer;Number of octave layers within each octave;3;1;4;1;ADD;1;2;3;4;;;;
SIFT;sigma;double;Sigma for gaussian space;1.6;1.1;2;0.1;ADD;;;;;;;;
STAR;lineThresholdBinarized;integer;Maximum ratio between some factors that made up the Harris measure : (second test) - Harris of sizes;8;1;16;1;ADD;;;;;;;;
STAR;lineThresholdProjected;integer;Maximum ratio between some factors that made up the Harris measure : (first test) - Harris of responses;10;2;20;1;ADD;;;;;;;;
STAR;maxSize;integer;The number of filters to be applied, the parameter value set the maximum size (last filter);16;2;100;1;ADD;;;;;;;;
STAR;responseThreshold;integer;Eliminate weak corners;30;10;200;10;ADD;;;;;;;;
STAR;suppressNonmaxSize;integer;Non max suppression neighborhood size;5;3;15;2;ADD;;;;;;;;
SURF;extended;boolean;Extended descriptor flag (true - use extended 128-element descriptors / false - use 64-element descriptors).;false;false;true;false;ADD;;;;;;;;
SURF;hessianThreshold;double;Threshold for hessian keypoint detector used in SURF;100;10;5000;10;ADD;;;;;;;;
SURF;nOctaveLayers;integer;Number of octave layers within each octave;3;1;4;1;ADD;1;2;3;4;;;;
SURF;nOctaves;integer;Number of pyramid octaves the keypoint detector will use;4;1;8;1;ADD;1;2;3;4;5;6;7;8
SURF;upright;boolean;Up-right or rotated features flag (true - do not compute orientation of features / false - compute orientation);false;false;true;false;ADD;;;;;;;;